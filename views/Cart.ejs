<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
      .card {
        --bg-card: rgb(212, 212, 212);
        --primary: #050f0e;
        --primary-800: #15887e;
        --primary-shadow: #15887e;
        --light: #000000;
        --zinc-800: #448ba0;
        --bg-linear: blue;
        position: relative;
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
        padding: 1rem;
        width: 20rem;
        background-color: var(--bg-card);
        border-radius: 1rem;
      }

      .image_container {
        overflow: hidden;
        cursor: pointer;

        position: relative;
        z-index: 5;

        width: 100%;
        height: 8rem;
        background-color: var(--primary-800);

        border-radius: 0.5rem;
      }

      .image_container .image {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);

        width: 3rem;
        fill: var(--light);
      }

      .title {
        overflow: clip;

        width: 100%;

        font-size: 1rem;
        font-weight: 600;
        color: var(--light);
        text-transform: capitalize;
        text-wrap: nowrap;
        text-overflow: ellipsis;
      }

      .size {
        font-size: 1rem;
        color: var(--light);
      }

      .list-size {
        display: flex;
        align-items: center;
        gap: 0.25rem;

        margin-top: 0.25rem;
      }

      .list-size .item-list {
        list-style: none;
      }

      .list-size .item-list-button {
        cursor: pointer;
        background-color: rgb(12, 70, 65);

        font-size: 0.75rem;
        color: var(--light);

        border: 1px solid white;
        border-radius: 0.25rem;

        transition: all 0.3s ease-in-out;
      }

      .item-list-button:hover {
        border: 1px solid var(--light);
      }
      .item-list-button:focus {
        border: 1px solid var(--primary-shadow);
      }

      .action {
        display: flex;
        align-items: center;
        gap: 1rem;
      }

      .price {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--light);
      }

      .cart-button {
        cursor: pointer;

        display: flex;
        justify-content: center;
        align-items: center;
        gap: 0.25rem;

        padding: 0.5rem;
        width: 100%;
        background-color: rgb(239, 21, 21);

        font-size: 1rem;
        font-weight: 500;
        color: white;
        text-wrap: nowrap;

        border: 1px solid white;
        border-radius: 0.5rem;
      }

      .cart-button .cart-icon {
        width: 1rem;
      }
      #successMessage {
        position: absolute;
        top: 6%;
        right: 0;
        background-color: #4cd388;
        color: white;
        padding: 10px;
        font-size: 20px;
        margin: 10px;
        border-radius: 4px;
        animation: message 0.3s ease-in-out;
      }
      @keyframes message {
        0% {
          transform: scale(0);
        }
        100% {
          transform: scale(1);
        }
      }
      .product_container {
        height: auto;
        /* background-color: rgb(255, 242, 205); */
        display: flex;
        flex-direction: row;
        justify-content: baseline;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
        margin: 1rem;
      }
      .total-price {
        margin-top: 1rem;
        padding: 1rem;
        background-color: #f8f8f8;
        border: 1px solid #ddd;
        border-radius: 0.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .total-price span {
        font-size: 1.2rem;
        font-weight: bold;
      }

      #totalPrice {
        color: #333;
      }
    </style>
  </head>
  <body>
    <%- include("Nav") %>
    <div
      class="h-12 w-full bg-gray-400 flex items-center justify-center rounded-sm"
    >
      <p id="total-price" class="text-xl font-semibold">how are you all</p>
    </div>
    <div class="product_container">
      <% if(state) {%> <% Items.forEach(item => { %>
      <div class="card">
        <div class="image_container">
          <img
            src="data:<%= item.productid.image.contentType %>;base64,<%= item.productid.image.data.toString('base64') %>"
            alt="<%= item.productid.itemName %>"
          />
        </div>
        <div class="title">
          <span><%= item.productid.itemName %></span>
        </div>
        <div class="size">
          <p>Description: <%= item.productid.description %></p>
          <p>Price: $<%= item.productid.price %></p>

          <p>Quantity: <%= item.quantity %></p>
          <p>Category: <%= item.productid.category %></p>
        </div>
        <form action="/Cart/remove?productid=<%= item._id %>" method="post">
          <input type="hidden" name="method" value="delete" />
          <button class="cart-button">
            <svg
              class="cart-icon"
              stroke="currentColor"
              stroke-width="1.5"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z"
                stroke-linejoin="round"
                stroke-linecap="round"
              ></path>
            </svg>
            <span>Remove from Cart</span>
          </button>
        </form>
      </div>
      <% }) %>
    </div>
    <% } else { %>
    <div>Add something here</div>
    <% } %>
  </body>
  <script>
    const totalPriceElement = document.getElementById("total-price");

    const items = `<%- JSON.stringify(Items) %>`;
    const itemss = JSON.parse(items);
    console.log(items);
    console.log(itemss);
    let totalprice = [];
    itemss.forEach((element) => {
      totalprice.push(element.productid.price);
    });
    const finalvalue = totalprice.reduce((accum, value) => {
      return accum + value;
    });

    totalPriceElement.innerHTML = `Total price=$${finalvalue}`;
    setTimeout(() => {
      const successMessage = document.getElementById("successMessage");
      if (successMessage) {
        successMessage.style.display = "none";
      }
    }, 3000);
    setTimeout(() => {
      const errorMessage = document.getElementById("errorMessage");
      if (errorMessage) {
        errorMessage.style.display = "none";
      }
    }, 3000);
  </script>
</html>
